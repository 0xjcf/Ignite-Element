name: CI Build & Release

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Validate commit messages
        run: |
          npx --no-install commitlint --from=$(git rev-list --max-parents=0 HEAD) --to=HEAD

      - name: Lint code
        run: npm run lint

      - name: Run jsdom tests
        run: npm run test

  release:
    needs: build
    runs-on: ubuntu-22.04
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Set CI environment variable
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git configuration
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Check for pending version bump
        id: version_check
        run: |
          if [ "$(git log --oneline HEAD..origin/main)" = "" ]; then
            echo "No new changes to release. Exiting."
            exit 0
          fi

      - name: Generate changelog and bump version
        run: |
          npm run release || npm version patch --no-git-tag-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commit and push version bump
        run: |
          git add package.json CHANGELOG.md
          git commit -m "chore(release): bump version to $(node -p "require('./package.json').version")"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub release
        run: |
          VERSION=$(node -p "require('./package.json').version")
          gh release create "v$VERSION" --title "Release v$VERSION" --notes "Automated release for v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure NPM registry
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish package
        run: npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
