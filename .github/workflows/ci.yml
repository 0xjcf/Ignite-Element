name: CI Build & Release

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Validate commit messages
        run: |
          npx --no-install commitlint --from=$(git rev-list --max-parents=0 HEAD) --to=HEAD

      - name: Lint code
        run: npm run lint

      - name: Run jsdom tests
        run: npm run test

  release:
    needs: build
    runs-on: ubuntu-22.04
    if: ${{ needs.build.result == 'success' }}
    steps:
      - name: Set CI environment variable
        run: echo "CI=true" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Git configuration
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Create a release branch with dummy change
        run: |
          # Create a dummy change to ensure a commit exists
          echo "Release branch created at $(date)" > release-placeholder.txt
          git add release-placeholder.txt
          git commit -m "chore: create release branch with placeholder change"
          VERSION=$(node -p "require('./package.json').version")
          git checkout -b release-v$VERSION
          git push origin release-v$VERSION

      - name: Create a pull request for release
        run: |
          VERSION=$(node -p "require('./package.json').version")
          gh pr create --base main --head release-v$VERSION --title "chore: Release v$VERSION" --body "Automated release PR for v$VERSION"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge for the PR
        run: |
          VERSION=$(node -p "require('./package.json').version")
          PR_NUMBER=$(gh pr list --repo ${{ github.repository }} --search "Release v$VERSION" --json number --jq ".[0].number")
          gh pr merge $PR_NUMBER --auto --squash --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove dummy change
        run: |
          git reset --hard HEAD~1
          git push origin HEAD --force

      - name: Generate changelog and bump version
        run: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
